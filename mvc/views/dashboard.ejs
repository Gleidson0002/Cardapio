<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="/stylesheets/dashboard_style.css">
    <title>Dashboard</title>
</head>

<body>

    <div class="sidebar">
        <h2>Menu</h2>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link active" href="#">Dashboard</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Relatórios</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Configurações</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="login.html">Sair</a>
            </li>
        </ul>
    </div>

    <div class="itensdobanco">
        <h2>Produtos Cadastrados</h2>
        <table class="product-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nome</th>
                    <th>Preço</th>
                    <th>Descrição</th>
                </tr>
            </thead>
            <tbody>
                <!-- Os produtos будã o carregados aqui -->
            </tbody>
        </table>
    </div>

    <div class="box">

        <form id="product-form">
            <h1>Cadastro de Produtos</h1>
            <label for="product-name">Nome do Produto:</label>
            <input type="text" id="product-name" required><br><br>

            <label for="product-price">Preço:</label>
            <input type="number" id="product-price" step="0.01" required><br><br>

            <label for="product-description">Descrição:</label>
            <textarea id="product-description" required></textarea><br><br>
            
            <button type="submit">Cadastrar Produto</button>
        </form>

        <form id="delete-product-form">
            <h2>Excluir Produto</h2>
            <label for="delete-product-id">ID do Produto:</label>
            <input type="text" id="delete-product-id" required><br><br>

            <button type="submit">Excluir Produto</button>
        </form>

        <form id="edit-product-form">
            <h2>Editar Produto</h2>
            <label for="edit-product-id">ID do Produto:</label>
            <input type="text" id="edit-product-id" required><br><br>

            <label for="edit-product-name">Nome do Produto:</label>
            <input type="text" id="edit-product-name" required><br><br>

            <label for="edit-product-price">Preço:</label>
            <input type="number" id="edit-product-price" step="0.01" required><br><br>

            <label for="edit-product-description">Descrição:</label>
            <textarea id="edit-product-description" required></textarea><br><br>

            <button type="submit">Atualizar Produto</button>
        </form>

    </div>

    <script>
        document.getElementById('product-form').addEventListener('submit', async function (event) {
            event.preventDefault(); 
            const nome = document.getElementById('product-name').value;
            const preco = parseFloat(document.getElementById('product-price').value);
            const descricao = document.getElementById('product-description').value;

            const produto = { nome, preco, descricao };

            console.log('Dados do produto:', produto); 

            try {
                
                const response = await fetch('http://localhost:5000/adicionar-produto', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(produto),
                });


                if (response.ok) {
                    alert('Produto cadastrado com sucesso!');
                    document.getElementById('product-form').reset(); 
                } else {
                    const errorData = await response.text(); 
                    console.error('Erro na resposta do servidor:', errorData);
                    alert(`Erro ao cadastrar o produto: ${errorData}`);
                }
            } catch (error) {
                console.error('Erro ao se comunicar com o servidor:', error);
                alert('Erro ao se comunicar com o servidor.');
            }
        });

        document.getElementById('edit-product-form').addEventListener('submit', async function (event) {
  event.preventDefault();

  const id = document.getElementById('edit-product-id').value;
  const nome = document.getElementById('edit-product-name').value;
  const preco = parseFloat(document.getElementById('edit-product-price').value);
  const descricao = document.getElementById('edit-product-description').value;

  const produto = { nome, preco, descricao };

  try {
    const response = await fetch(`/editar-produto/${id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(produto),
    });

    if (response.ok) {
      alert('Produto atualizado com sucesso!');
    } else {
      alert('Erro ao atualizar o produto.');
    }
  } catch (error) {
    console.error('Erro:', error);
    alert('Erro ao se comunicar com o servidor.');
  }
});

document.getElementById('delete-product-form').addEventListener('submit', async function (event) {
  event.preventDefault();

  const id = document.getElementById('delete-product-id').value;

  try {
    const response = await fetch(`/excluir-produto/${id}`, {
      method: 'DELETE',
    });

    if (response.ok) {
      alert('Produto excluído com sucesso!');
    } else {
      alert('Erro ao excluir o produto.');
    }
  } catch (error) {
    console.error('Erro:', error);
    alert('Erro ao se comunicar com o servidor.');
  }
});


// Função para carregar os produtos
async function carregarProdutos() {
    try {
        // Faz uma requisição GET à rota '/produtos'
        const response = await fetch('/get-produtos');
        if (response.ok) {
            const produtos = await response.json();

            // Seleciona o corpo da tabela
            const tbody = document.querySelector('.product-table tbody');
            tbody.innerHTML = ''; // Limpa a tabela antes de preencher

            // Adiciona cada produto como uma linha na tabela
            produtos.forEach((produto, index) => {
                const row = document.createElement('tr');

                row.innerHTML = `
                    <td>${produto.id || index + 1}</td>
                    <td>${produto.nome}</td>
                    <td>R$ ${produto.preco.toFixed(2)}</td>
                    <td>${produto.descricao}</td>
                `;

                tbody.appendChild(row);
            });
        } else {
            console.error('Erro ao buscar produtos:', await response.text());
            alert('Erro ao carregar os produtos.');
        }
    } catch (error) {
        console.error('Erro ao se comunicar com o servidor:', error);
        alert('Erro ao carregar os produtos.');
    }
}

// Carrega os produtos ao carregar a página
document.addEventListener('DOMContentLoaded', carregarProdutos);




    </script>
</body>

</html>